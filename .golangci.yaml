run:
  build-tags:
    - infra
  deadline: 7m

  # which dirs to skip: they won't be analyzed;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but next dirs are always skipped independently
  # from this option's value:
  #   	vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  issues.exclude-dirs:
    - proto

  issues.exclude-files:
    - ".*\\.pb\\.go"
    - ".*\\.generated\\.go"

linters:
  disable-all: true
  enable:
    - errcheck
    - gocritic
    - goconst
    # - gocognit
    - gofmt
    - goimports
    - govet
    - gosec
    - ineffassign
    # - ireturn
    # - lll
    - misspell
    # - maintidx
    - nilnil
    - nlreturn
    - nonamedreturns
    - prealloc
    - sqlclosecheck
    - tenv
    - typecheck
    - unconvert
    - makezero
    - wsl
    - whitespace
    - unused
    # - wastedassign
  fast: false

linters-settings:
  errcheck:
    # report about not checking of errors in type assetions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: false

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: false
  govet:
    # report about shadowed variables
    shadow: true
    enable:
      - fieldalignment
  golint:
    # minimal confidence for issues, default is 0.8
    min-confidence: 0.0
  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true
  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: istio.io/
  maligned:
    # print struct with more effective memory layout or not, false by default
    suggest-new: true
  misspell:
    # Correct spellings using locale preferences for US or UK.
    # Default is to use a neutral variety of English.
    # Setting locale to US will correct the British spelling of 'colour' to 'color'.
    locale: US
    ignore-words:
      - cancelled
      - metrices
  lll:
    # max line length, lines longer will be reported. Default is 120.
    # '\t' is counted as 1 character by default, and can be changed with the tab-width option
    line-length: 160
    # tab width in spaces. Default to 1.
    tab-width: 1
  unused:
    # treat code as a program (not a library) and report unused exported identifiers; default is false.
    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: true
  unparam:
    # call graph construction algorithm (cha, rta). In general, use cha for libraries,
    # and rta for programs with main packages. Default is cha.
    algo: cha

    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  gocritic:
    disabled-checks:
        - assignOp
    enabled-checks:
      - boolExprSimplify
      - builtinShadow
      - commentedOutCode
      - commentedOutImport
      - docStub
      - emptyFallthrough
      - hexLiteral
      - indexAlloc
      - initClause
      - methodExprCall
      - nilValReturn
      - octalLiteral
      - rangeExprCopy
      - stringXbytes
      - typeAssertChain
      - typeUnparen
      - unnecessaryBlock
      - weakCond

  goconst: # https://github.com/jgautheron/goconst
    # minimal occurrences count to trigger, 3 by default
    min-occurrences: 3

issues:
  # List of regexps of issue texts to exclude, empty list by default.
  # But independently from this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`. To list all
  # excluded by default patterns execute `golangci-lint run --help`
  exclude:
    - composite literal uses unkeyed fields

  exclude-rules:
    - text: "G115"
      linters:
        - gosec
    - text: "G404"
      linters:
        - gosec

    # Exclude some linters from running on test files.
    - path: _test\.go$|^tests/|^samples/|fixtures\.go$
      linters:
        - errcheck
        - maligned
        - govet
        - lll
    - path: _mock\.go$|_event\.go$|^config/|infra/events\.go$
      linters:
        - govet

  # Independently from option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: true

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0